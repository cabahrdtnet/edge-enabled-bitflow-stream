name: "Bitflow-Script-Execution-Device"
manufacturer: "TUB-FakIV-CIT"
model: "Device-Bitflow-v1"
labels:
  - "device-bitflow"
description: "Device that executes bitflow scripts."

deviceResources:
  -
    name: "status"
    description: "status of the script inside the script execution environment"
    properties:
      value:
        { type: "String", readWrite: "R", defaultValue: ""}
      units:
        { type: "String", readWrite: "R", defaultValue: "" }

  -
    name: "contents"
    description: "file contents of script which will be executed on the device"
    properties:
      value:
        { type: "String", readWrite: "W", defaultValue: "input -> output"}
      units:
        { type: "String", readWrite: "R", defaultValue: "" }

  -
    name: "device_profile"
    description: "name of device profile as placeholder for devices whose readings are streamed to the script"
    properties:
      value:
        { type: "String", readWrite: "W", defaultValue: "" }
      units:
        { type: "String", readWrite: "R", defaultValue: "" }

  -
    name: "offloading_left_operand"
    description: "left operand of dyadic offloading operator"
    properties:
      value:
        { type: "String", readWrite: "W", defaultValue: "" }
      units:
        { type: "String", readWrite: "R", defaultValue: "" }

  -
    name: "offloading_operator"
    description: "dyadic offloading operator describes condition when to offload"
    properties:
      value:
        { type: "String", readWrite: "W", defaultValue: "" }
      units:
        { type: "String", readWrite: "R", defaultValue: "" }

  -
    name: "offloading_right_operand"
    description: "right operand of dyadic offloading operator"
    properties:
      value:
        { type: "String", readWrite: "W", defaultValue: "" }
      units:
        { type: "String", readWrite: "R", defaultValue: "" }

  -
    name: "actuation_device"
    description: "name of another device that is acted upon"
    properties:
      value:
        { type: "String", readWrite: "W", defaultValue: "device-empty" }
      units:
        { type: "String", readWrite: "R", defaultValue: "" }

  -
    name: "command"
    description: "command of actuation_device that is executed if the actuation_condition is fulfilled"
    properties:
      value:
        { type: "String", readWrite: "W", defaultValue: "" }
      units:
        { type: "String", readWrite: "R", defaultValue: "" }

  -
    name: "actuation_left_operand"
    description: "left operand of dyadic actuation operator"
    properties:
      value:
        { type: "String", readWrite: "W", defaultValue: "" }
      units:
        { type: "String", readWrite: "R", defaultValue: "" }

  -
    name: "actuation_operator"
    description: "dyadic actuation operator describes condition when to act on actuation_device, i.e. call above command"
    properties:
      value:
        { type: "String", readWrite: "W", defaultValue: "!=" }
      units:
        { type: "String", readWrite: "R", defaultValue: "" }

  -
    name: "actuation_right_operand"
    description: "right operand of dyadic actuation operator"
    properties:
      value:
        { type: "String", readWrite: "W", defaultValue: "" }
      units:
        { type: "String", readWrite: "R", defaultValue: "" }

deviceCommands:
  -
    name: "control"
    get:
      - { operation: "get", object: "status", parameter: "status" }
    set:
      - { operation: "set", object: "status", parameter: "status" }

  -
    name: "script"
    set:
      - { operation: "set", object: "contents", parameter: "contents" }

  -
    name: "input"
    set:
      - { operation: "set", object: "device_profile", parameter: "device_profile" }

  -
    name: "actuation"
    set:
      - { index: "1", operation: "set", object: "command", parameter: "command" }
      - { index: "2", operation: "set", object: "actuation_device", parameter: "actuation_device" }
      - { index: "3", operation: "set", object: "actuation_left_operand", parameter: "actuation_left_operand" }
      - { index: "4", operation: "set", object: "actuation_operator", parameter: "actuation_operator" }
      - { index: "5", operation: "set", object: "actuation_right_operand", parameter: "actuation_right_operand" }

  -
    name: "offloading"
    set:
      - { index: "1", operation: "set", object: "offloading_left_operand", parameter: "offloading_left_operand" }
      - { index: "2", operation: "set", object: "offloading_operator", parameter: "offloading_operator" }
      - { index: "3", operation: "set", object: "offloading_right_operand", parameter: "offloading_right_operand" }

# TODO think about correct http codes
coreCommands:
  -
    name: "control"
    get:
      path: "/api/v1/device/{deviceId}/control"
      responses:
        -
          code: "200"
          description: "get current status of bitflow script execution engine"
          expectedValues: ["status"]
        -
          code: "500"
          description: "internal server error"
          expectedValues: []
    put:
      path: "/api/v1/device/{deviceId}/control"
      parameterNames: ["status"]
      responses:
        -
          code: "204"
          description: "control bitflow script execution engine by setting next desired status"
          expectedValues: []
        -
          code: "500"
          description: "internal server error"
          expectedValues: []

  -
    name: "script"
    put:
      path: "/api/v1/device/{deviceId}/script"
      parameterNames: ["script"]
      responses:
        -
          code: "204"
          description: "load script into bitflow script execution engine"
          expectedValues: []
        -
          code: "500"
          description: "internal server error"
          expectedValues: []

  -
    name: "input"
    put:
      path: "/api/v1/device/{deviceId}/input"
      parameterNames: ["device_profile"]
      responses:
        -
          code: "204"
          description: "set input data (device profile name) of script in bitflow script execution engine"
          expectedValues: []
        -
          code: "500"
          description: "internal server error"
          expectedValues: []

  -
    name: "actuation"
    put:
      path: "/api/v1/device/{deviceId}/actuation"
      parameterNames: ["command", "actuation_device", "actuation_left_operand", "actuation_operator", "actuation_right_operand"]
      responses:
        -
          code: "204"
          description: "configure actuation (command, device, condition) of script in bitflow script execution engine"
          expectedValues: []
        -
          code: "500"
          description: "internal server error"
          expectedValues: []

  -
    name: "offloading"
    put:
      path: "/api/v1/device/{deviceId}/offloading"
      parameterNames: ["offloading_left_operand", "offloading_operator", "offloading_right_operand"]
      responses:
        -
          code: "204"
          description: "configure offloading condition of script in bitflow script execution engine"
          expectedValues: []
        -
          code: "500"
          description: "internal server error"
          expectedValues: []